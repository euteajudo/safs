#!/usr/bin/env python3
"""Testar importa√ß√£o das rotas para identificar erros"""

import sys
import os

# Adicionar caminho do backend
sys.path.insert(0, os.path.join('backend', 'backend'))

try:
    print("1. Testando importa√ß√£o do m√≥dulo base...")
    from app_catalogo.models.base import Base
    print("   ‚úÖ Base importado com sucesso")
    
    print("2. Testando importa√ß√£o dos modelos...")
    from app_catalogo.models.user import User
    from app_catalogo.models.catalogo import ItensCatalogo
    print("   ‚úÖ Modelos importados com sucesso")
    
    print("3. Testando importa√ß√£o dos schemas...")
    from app_catalogo.schemas import catalogo as catalogo_schemas
    print("   ‚úÖ Schemas importados com sucesso")
    
    print("4. Testando importa√ß√£o do security...")
    from app_catalogo.utils import security
    print("   ‚úÖ Security importado com sucesso")
    
    print("5. Testando importa√ß√£o do router do cat√°logo...")
    from app_catalogo.routers import catalogo
    print("   ‚úÖ Router do cat√°logo importado com sucesso")
    print(f"   üìä N√∫mero de rotas no router: {len(catalogo.router.routes)}")
    
    print("6. Listando rotas do router...")
    for i, route in enumerate(catalogo.router.routes):
        if hasattr(route, 'path'):
            methods = getattr(route, 'methods', ['GET'])
            print(f"   {i+1:2d}. {route.path:<40} {list(methods)}")
    
    print("7. Testando importa√ß√£o da aplica√ß√£o principal...")
    from app_catalogo.main import app
    print("   ‚úÖ Aplica√ß√£o principal importada com sucesso")
    
    print("\nüéâ TODAS AS IMPORTA√á√ïES FUNCIONARAM!")
    
except Exception as e:
    print(f"\n‚ùå ERRO NA IMPORTA√á√ÉO: {e}")
    import traceback
    traceback.print_exc()
